Alpha evolve core loop extracted from 
https://storage.googleapis.com/deepmind-media/DeepMind.com/Blog/alphaevolve-a-gemini-powered-coding-agent-for-designing-advanced-algorithms/AlphaEvolve.pdf

The user provides an initial program (with components to evolve marked), evaluation code, and optional configurations
AlphaEvolve then initiates an evolutionary loop. 
The Prompt sampler uses programs from the Program database to construct rich prompts
Given these prompts, the LLMs generate code modifications (diffs), which are applied to create new programs. 
These are then scored by Evaluators and promising solutions are registered back into the Program database.

User configurations:
Prompt sampler - Prompt template and configuration (config.py)
LLMs ensemble - Choice of existing LLMs
Evaluators pool - Evaluation code
Program database - Initial program to evolve

pseudo code:
parent_program, inspirations = database.sample()
prompt = prompt_sampler.build(parent_program, inspirations)
diff = llm.generate(prompt)
child_program = apply_diff(parent_program, diff)
results = evaluator.execute(child_program)
database.add(child_program, results)

Genetic Algorithm:
- A cominbination of island based and map elite algorithms.

